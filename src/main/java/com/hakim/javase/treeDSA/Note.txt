                                        Tree
----------------------------------------------------------------------------------------


Parent Node: The node which is a predecessor of a node is called the parent node of that node.
{B} is the parent node of {D, E}.

Child Node: The node which is the immediate successor of a node is called the child node of that node.
 Examples: {D, E} are the child nodes of {B}.

Root Node: The topmost node of a tree or the node which does not have any parent node is called the
root node. {A} is the root node of the tree. A non-empty tree must contain exactly one root node and
exactly one path from the root to all other nodes of the tree.

Leaf Node or External Node: The nodes which do not have any child nodes are called leaf nodes.
 {K, L, M, N, O, P} are the leaf nodes of the tree.

Ancestor of a Node: Any predecessor nodes on the path of the root to that node are called Ancestors
of that node. {A,B} are the ancestor nodes of the node {E}

Descendant: Any successor node on the path from the leaf node to that node. {E,I} are the descendants
of the node {B}.

Sibling: Children of the same parent node are called siblings. {D,E} are called siblings.

Level of a node: The count of edges on the path from the root node to that node. The root node has
level 0.

Internal node: A node with at least one child is called Internal Node.

Neighbour of a Node: Parent or child nodes of that node are called neighbors of that node.

Subtree: Any node of the tree along with its descendant.


a) Binary Tree
-----------
1. what is
2. How to create
3. How to add node
4. How to travers
    i. Pre-Order (recursive)
    ii. In order (recursive)
    iii. Post order (recursive)
    iv . Level order
5. Find max
6. is symmetric

b) Binary Search Tree
----------------------
1. Insert
2. Traverse
3. search one
4. validate